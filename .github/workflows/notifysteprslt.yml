name: notify last step result
on:
   workflow_dispatch:
     

jobs:
   notifystepresult:
      runs-on: ubuntu-20.04
      # continue-on-error=true this would force to continue other steps no matter the previos step have failed
      steps:
      - name: step output capture
        id: maven-deploy
        run: |
         mvn deploy| grep 'ERROR' | tee mvnrst.log
         echo "::set-output name=mvndeployrst::$(cat mvnrst.log)"
         exit 1
#      - name: Notify about failure if last step failed
#        env:
#          check: ${{ contains(steps.maven-deploy.outputs.mvndeployrst, 'ERROR') }} 
#        run: |
#          echo "THE RESULT FROM CHECK IS"
#          echo ${check}
#          echo "THIS IS THE RESULT FROM LAST STEP TO NOTIFY"
#          echo ${{ steps.maven-deploy.outputs.mvndeployrst }}
      - name: Notify failure on condition
        if: ${{ failure() }}
        run: |
          if [[ ${{ contains(steps.maven-deploy.outputs.mvndeployrst, 'ERROR') }} == true ]]; 
           then
            cat << EOF > message.json
            {"@type":"MessageCard","@context":"https://schema.org/extensions","summary":"Build library fail!","themeColor":"ff0000","title":"$GITHUB_REPOSITORY Build library fail ðŸ’¢!","sections":[{"facts":[{"name":"Repository:","value":"$GITHUB_REPOSITORY"},{"name":"Author:","value":"$GITHUB_ACTOR"},{"name":"Branch:","value":"$GITHUB_REF_NAME"},{"name":"Commit:","value":"$GITHUB_SHA"}, {"name":"ErrorMsg","value":"${{ steps.maven-deploy.outputs.mvndeployrst }}"}]}],"potentialAction":[{"@type":"OpenUri","name":"View on GitHub","targets":[{"os":"default","uri":"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"}]}]}
            EOF
            echo "cat message.json"
          else:
            cat << EOF > message.json
            {"@type":"MessageCard","@context":"https://schema.org/extensions","summary":"Build library fail!","themeColor":"ff0000","title":"$GITHUB_REPOSITORY Build library fail ðŸ’¢!","sections":[{"facts":[{"name":"Repository:","value":"$GITHUB_REPOSITORY"},{"name":"Author:","value":"$GITHUB_ACTOR"},{"name":"Branch:","value":"$GITHUB_REF_NAME"},{"name":"Commit:","value":"$GITHUB_SHA"}]}],"potentialAction":[{"@type":"OpenUri","name":"View on GitHub","targets":[{"os":"default","uri":"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"}]}]}
            EOF
            echo "cat message.json"
          fi

#      work:
#       needs: check
#       if: !contains(needs.check.outputs.status, 'failure')
#       steps:
#        - run: foo
#        - run: ...



 #     - name: Install dependencies
 #       id: composer-run
 #       continue-on-error: true
 #       run: composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-suggest

 #     - name: Execute tests
 #       if: steps.composer-run.outcome == 'success' && steps.composer-run.conclusion == 'success'
 #       run: vendor/bin/phpunit